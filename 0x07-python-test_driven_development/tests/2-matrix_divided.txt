"2-matrix_divided.py" module
============================

function "matrix_divided(matrix, div)"

Imporing the function:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test dividing a matrix of integers
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test matrix with rows of diffrent size
    >>> matrix_divided([[1, 2, 3], [4, 5]], 3)
    Traceback (most recent call last):
	...
    TypeError: Each row of the matrix must have the same size

Test passing a list with a string
    >>> matrix_divided([[1, 2, "hello"], [4, 5, 6]], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test passing a string as a divder
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "Hi")
    Traceback (most recent call last):
	...
    TypeError: div must be a number

Test passing 0 as the divder
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Test passing a float as the divder
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test passing float(inf) as the divder
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 1.2)
    [[0.83, 1.67, 2.5], [3.33, 4.17, 5.0]]

Test missing one argument
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Test missing two arguments
    >>> matrix_divided()
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
